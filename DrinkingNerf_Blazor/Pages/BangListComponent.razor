@using DrinkingNerf_Engine.Bangs;
@using DrinkingNerf_Engine.Users;
@inject BangService bangService;
@inject UserService userService;

<div class="user-list">
    <h2>Bang History</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Shooter</th>
                <th>Target</th>
                <th>Hit/Miss</th>
                <th>Reward</th>
                <th>Time</th>
                <th></th> <!-- Column for delete icon -->
            </tr>
        </thead>
        <tbody>
            @foreach (var bang in bangService.GetBangsLimited())
            {
                <tr>
                    <td>@userService.GetUser(bang.Shooter)?.Name</td>
                    <td>@userService.GetUser(bang.Target)?.Name</td>
                    <td>
                        @if (@bang.Outcome == global::Bang.OutcomeEnum.Hit)
                        {
                            <div>✅</div>
                        }
                        else
                        {
                            <div>❌</div>
                        }
                    </td>
                    <td> + @bang.ShooterHitScoreModificator </td>
                    <td>@bang.DateTime</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => Delete(bang)">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code
{
    [Parameter] public EventCallback OnBangDeleted { get; set; }
    public void Delete(BangOutcome bang)
    {
        bangService.DeleteBang(bang);
        StateHasChanged();
        OnBangDeleted.InvokeAsync();
    }
}
