@using System.Globalization;
@using DrinkingNerf_Engine.Bangs;
@using DrinkingNerf_Engine.Users;
@inject BangService bangService;
@inject UserService userService;

<div class="user-list">
    <h2 class="text-center">Bang History</h2>
    <div class="bang-list">
        @foreach (var bang in bangService.GetBangsOneDayOld())
        {
            @if (@bang.Outcome == global::Bang.OutcomeEnum.Hit) {
                <div class="card bg-success"><div class="card-body">
                    <div class="d-flex">
                        <!-- Shooter & Target -->
                        <div class="bg-white">
                            @userService.GetUser(bang.Shooter)?.Name > @userService.GetUser(bang.Target)?.Name
                        </div>

                        <!-- Info -->
                        <div class="bg-white">
                            @bang.DateTime.ToString("HH:mm dd MMM", CultureInfo.InvariantCulture)
                        </div>

                        <!-- Actions -->
                        <div>
                            <button class="btn btn-outline-danger btn-sm" @onclick="() => Delete(bang)">
                                Elimina
                            </button>
                        </div>
                    </div>
                </div></div>
            } else {
                <div class="card bg-danger"><div class="card-body">
                    <div class="d-flex">
                        <!-- Shooter & Target -->
                        <div class="flex-grow-1 card"><div class="card-body">
                            @userService.GetUser(bang.Shooter)?.Name > @userService.GetUser(bang.Target)?.Name
                        </div></div>

                        <!-- Info -->
                        <div class="card"><div class="card-body">
                            @bang.DateTime.ToString("HH:mm dd MMM", CultureInfo.InvariantCulture)
                        </div></div>

                        <!-- Actions -->
                        <div class="card"><div class="card-body">
                            <button class="btn btn-outline-danger btn-sm" @onclick="() => Delete(bang)">
                                Elimina
                            </button>
                        </div></div>
                    </div>
                </div></div>
            }
        }
    </div>
</div>

@code
{
    [Parameter] public EventCallback OnBangDeleted { get; set; }
    public void Delete(BangOutcome bang)
    {
        bangService.DeleteBang(bang);
        StateHasChanged();
        OnBangDeleted.InvokeAsync();
    }
}
