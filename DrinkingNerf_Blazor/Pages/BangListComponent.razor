@using System.Globalization;
@using DrinkingNerf_Engine.Bangs;
@using DrinkingNerf_Engine.Users;
@inject BangService bangService;
@inject UserService userService;

<div class="user-list">
    <h2 class="text-center">Bang History</h2>
    <div class="bang-list">
        <div class="card">
            <div class="card-body">
                This is some text within a card body.
            </div>
        </div>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Shooter</th>
                <th>Target</th>
                <th>Time</th>
                <th><!-- Delete Icon --></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bang in bangService.GetBangsOneDayOld())
            {
                @if (@bang.Outcome == global::Bang.OutcomeEnum.Hit) {
                    <tr class="bg-success">
                        <td>@userService.GetUser(bang.Shooter)?.Name</td>
                        <td>@userService.GetUser(bang.Target)?.Name</td>
                        <td>@bang.DateTime.ToString("HH:mm dd MMM", CultureInfo.InvariantCulture)</td>
                        <td>
                            <button class="btn btn-outline-danger btn-sm" @onclick="() => Delete(bang)">
                                Delete
                            </button>
                        </td>
                    </tr>
                } else {
                    <tr class="bg-danger">
                        <td>@userService.GetUser(bang.Shooter)?.Name</td>
                        <td>@userService.GetUser(bang.Target)?.Name</td>
                        <td>@bang.DateTime.ToString("HH:mm dd MMM", CultureInfo.InvariantCulture)</td>
                        <td>
                            <button class="btn btn-outline-danger btn-sm" @onclick="() => Delete(bang)">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code
{
    [Parameter] public EventCallback OnBangDeleted { get; set; }
    public void Delete(BangOutcome bang)
    {
        bangService.DeleteBang(bang);
        StateHasChanged();
        OnBangDeleted.InvokeAsync();
    }
}
